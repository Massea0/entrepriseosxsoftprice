import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';import { Badge } from '@/components/ui/badge';import { Button } from '@/components/ui/button';import { Progress } from '@/components/ui/progress';import { useAuth } from '@/contexts/AuthContext';import { useState, useEffect } from 'react';// ðŸŒŸ REVOLUTIONARY DESIGN SYSTEM IMPORTSimport {  FloatingParticles,  MorphingBlob,  TypewriterText,  GlowText,  StaggeredList,  StaggeredItem,  HoverZone,  MagneticButton,  EnhancedCard,  AnimatedMetricCard} from '@/components/ui/revolutionary-design-system';import {   Calendar,   Clock,   TrendingUp,   User,   Briefcase,   Heart,  Target,  Award,  CheckCircle2,  AlertCircle,  Plus,  FileText,  Users,  BarChart3,  DollarSign,  Activity,  Sparkles,  Zap} from 'lucide-react';interface EmployeeStats {  leaveBalance: {    vacation: number;    sick: number;    total: number;  };  performance: {    rating: string;    nextReview: string;    goals: number;    completed: number;  };  timeTracking: {    thisWeek: number;    thisMonth: number;    overtime: number;  };  assignments: {    activeTasks: number;    completedTasks: number;    assignedProjects: number;  };}export default function EmployeeDashboard() {  const { user } = useAuth();  const [stats, setStats] = useState<EmployeeStats>({    leaveBalance: {      vacation: 15,      sick: 5,      total: 20    },    performance: {      rating: "Excellent",      nextReview: "2025-03-15",      goals: 8,      completed: 6    },    timeTracking: {      thisWeek: 35,      thisMonth: 140,      overtime: 3    },    assignments: {      activeTasks: 8,      completedTasks: 24,      assignedProjects: 3    }  });  const [loading, setLoading] = useState(false);  useEffect(() => {    loadEmployeeStats();  }, []);  const loadEmployeeStats = async () => {    setLoading(true);    // Simulated API call    setTimeout(() => {      setLoading(false);    }, 1000);  };  const employeeMetrics = [    {      title: 'TÃ¢ches Actives',      value: stats.assignments.activeTasks,      description: 'En cours de traitement',      trend: 'up' as const,      trendValue: '+2 cette semaine',      icon: Briefcase    },    {      title: 'Performance',      value: `${((stats.performance.completed / stats.performance.goals) * 100).toFixed(0)}%`,      description: `${stats.performance.completed}/${stats.performance.goals} objectifs`,      trend: 'up' as const,      trendValue: stats.performance.rating,      icon: Target    },    {      title: 'Temps TravaillÃ©',      value: `${stats.timeTracking.thisWeek}h`,      description: 'Cette semaine',      trend: 'neutral' as const,      trendValue: `${stats.timeTracking.overtime}h sup.`,      icon: Clock    },    {      title: 'CongÃ©s Restants',      value: stats.leaveBalance.total,      description: `${stats.leaveBalance.vacation} vacances + ${stats.leaveBalance.sick} maladie`,      trend: 'neutral' as const,      trendValue: 'Jours disponibles',      icon: Calendar    }  ];  const recentTasks = [    {      id: 1,      title: "Finaliser rapport mensuel",      project: "Gestion FinanciÃ¨re",      priority: "high",      dueDate: "2025-01-18",      progress: 85    },    {      id: 2,      title: "Mise Ã  jour documentation API",      project: "DÃ©veloppement Tech",      priority: "medium",      dueDate: "2025-01-20",      progress: 60    },    {      id: 3,      title: "PrÃ©paration prÃ©sentation client",      project: "Business Development",      priority: "high",      dueDate: "2025-01-19",      progress: 40    },    {      id: 4,      title: "RÃ©vision code nouvelle feature",      project: "DÃ©veloppement Tech",      priority: "low",      dueDate: "2025-01-22",      progress: 20    }  ];  const upcomingEvents = [    {      id: 1,      title: "RÃ©union Ã©quipe dÃ©veloppement",      time: "10:00",      date: "2025-01-17",      type: "meeting"    },    {      id: 2,      title: "Formation sÃ©curitÃ© informatique",      time: "14:00",      date: "2025-01-18",      type: "training"    },    {      id: 3,      title: "Entretien Ã©valuation performance",      time: "16:00",      date: "2025-01-19",      type: "review"    }  ];  const getPriorityColor = (priority: string) => {    switch (priority) {      case 'high': return 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200';      case 'medium': return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200';      case 'low': return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200';      default: return 'bg-gray-100 text-gray-800 dark:bg-gray-800 dark:text-gray-200';    }  };  const getPriorityLabel = (priority: string) => {    switch (priority) {      case 'high': return 'Haute';      case 'medium': return 'Moyenne';      case 'low': return 'Basse';      default: return priority;    }  };  if (loading) {    return (      <div className="flex-1 flex items-center justify-center min-h-screen">        <div className="text-center">          <GlowText className="text-2xl font-bold mb-4">            Chargement de votre espace employÃ©...          </GlowText>        </div>      </div>    );  }  return (    <div className="flex-1 relative min-h-screen overflow-hidden">      {/* ðŸŒŸ REVOLUTIONARY BACKGROUND LAYER */}      <FloatingParticles         count={25}         className="absolute inset-0 z-0"       />      <MorphingBlob         className="absolute top-1/4 right-1/4 w-96 h-96 opacity-30 z-0"       />      <MorphingBlob         className="absolute bottom-1/4 left-1/4 w-80 h-80 opacity-20 z-0"       />      <div className="relative z-10 p-6 space-y-8">        {/* Hero Header RÃ©volutionnaire */}        <HoverZone effect="glow" className="text-center space-y-6">          <TypewriterText             text={`ðŸ‘‹ Bonjour ${user?.firstName || user?.email?.split('@')[0]} !`}            className="text-5xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent"            speed={60}          />                    <GlowText className="text-xl text-gray-600 dark:text-gray-300 mt-4">            Votre espace professionnel rÃ©volutionnaire âœ¨          </GlowText>          {/* Status Bar RÃ©volutionnaire */}          <div className="flex justify-center">            <EnhancedCard variant="shimmer" className="bg-gradient-to-r from-purple-600 via-blue-600 to-green-600 text-white inline-block">              <CardContent className="flex items-center gap-4 p-4">                <div className="flex items-center gap-2">                  <CheckCircle2 className="h-5 w-5" />                  <span className="font-medium">Statut: Actif</span>                </div>                <div className="flex items-center gap-2">                  <Award className="h-5 w-5" />                  <span className="font-medium">Performance: {stats.performance.rating}</span>                </div>                <div className="flex items-center gap-2">                  <Clock className="h-5 w-5" />                  <span className="font-medium">{stats.timeTracking.thisWeek}h cette semaine</span>                </div>              </CardContent>            </EnhancedCard>          </div>        </HoverZone>        {/* MÃ©triques RÃ©volutionnaires */}        <StaggeredList className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">          {employeeMetrics.map((metric, index) => (            <StaggeredItem key={metric.title}>              <AnimatedMetricCard                title={metric.title}                value={metric.value}                description={metric.description}                trend={metric.trend}                trendValue={metric.trendValue}                icon={metric.icon}                variant={index % 4 === 0 ? "glow" : index % 4 === 1 ? "shimmer" : index % 4 === 2 ? "pulse" : "lift"}                className={                  index % 4 === 0 ? "border-blue-200 dark:border-blue-800" :                  index % 4 === 1 ? "border-green-200 dark:border-green-800" :                  index % 4 === 2 ? "border-purple-200 dark:border-purple-800" :                  "border-orange-200 dark:border-orange-800"                }              />            </StaggeredItem>          ))}        </StaggeredList>        {/* Contenu Principal */}        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">          {/* TÃ¢ches RÃ©volutionnaires */}          <HoverZone effect="lift">            <EnhancedCard variant="glow" className="h-full">              <CardHeader>                <TypewriterText                   text="ðŸ“‹ Mes TÃ¢ches Actives"                  className="text-xl font-bold"                  speed={80}                />                <GlowText className="text-muted-foreground">                  Suivez vos missions en cours                </GlowText>              </CardHeader>              <CardContent className="space-y-4">                <StaggeredList>                  {recentTasks.map((task) => (                    <StaggeredItem key={task.id}>                      <MagneticButton className="w-full p-4 text-left bg-gradient-to-r from-gray-50 to-gray-100 dark:from-gray-800 dark:to-gray-900 border hover:shadow-lg transition-all">                        <div className="flex justify-between items-start mb-2">                          <div>                            <h4 className="font-semibold">{task.title}</h4>                            <p className="text-sm text-muted-foreground">{task.project}</p>                          </div>                          <Badge className={getPriorityColor(task.priority)}>                            {getPriorityLabel(task.priority)}                          </Badge>                        </div>                        <div className="space-y-2">                          <div className="flex justify-between text-sm">                            <span>Progression</span>                            <span className="font-medium">{task.progress}%</span>                          </div>                          <Progress value={task.progress} className="h-2" />                          <div className="flex items-center text-xs text-muted-foreground">                            <Calendar className="h-3 w-3 mr-1" />                            Ã‰chÃ©ance: {new Date(task.dueDate).toLocaleDateString('fr-FR')}                          </div>                        </div>                      </MagneticButton>                    </StaggeredItem>                  ))}                </StaggeredList>                                <MagneticButton className="w-full mt-4 bg-gradient-to-r from-blue-500 to-blue-600 text-white">                  <Plus className="h-4 w-4 mr-2" />                  Nouvelle TÃ¢che                </MagneticButton>              </CardContent>            </EnhancedCard>          </HoverZone>          {/* Ã‰vÃ©nements RÃ©volutionnaires */}          <HoverZone effect="shimmer">            <EnhancedCard variant="pulse" className="h-full">              <CardHeader>                <TypewriterText                   text="ðŸ“… Ã‰vÃ©nements Ã  Venir"                  className="text-xl font-bold"                  speed={80}                />                <GlowText className="text-muted-foreground">                  Votre planning professionnel                </GlowText>              </CardHeader>              <CardContent>                <StaggeredList className="space-y-3">                  {upcomingEvents.map((event) => (                    <StaggeredItem key={event.id}>                      <div className="flex items-start space-x-3 p-3 rounded-lg hover:bg-muted/50 transition-colors">                        <div className="h-2 w-2 rounded-full bg-blue-600 mt-2 flex-shrink-0" />                        <div className="flex-1 min-w-0">                          <p className="text-sm font-medium">{event.title}</p>                          <p className="text-xs text-muted-foreground">                            {new Date(event.date).toLocaleDateString('fr-FR')} â€¢ {event.time}                          </p>                        </div>                        <Badge variant="outline" className="text-xs">                          {event.type}                        </Badge>                      </div>                    </StaggeredItem>                  ))}                </StaggeredList>              </CardContent>            </EnhancedCard>          </HoverZone>        </div>        {/* Performance Section RÃ©volutionnaire */}        <HoverZone effect="glow">          <EnhancedCard variant="lift" className="bg-gradient-to-r from-green-50 to-emerald-50 dark:from-green-950 dark:to-emerald-950">            <CardHeader>              <TypewriterText                 text="ðŸŽ¯ Performance & Objectifs"                className="text-xl font-bold text-center"                speed={70}              />            </CardHeader>            <CardContent>              <div className="grid grid-cols-1 md:grid-cols-3 gap-6">                <div className="text-center">                  <div className="mb-4">                    <div className="text-3xl font-bold text-green-600">{stats.performance.completed}</div>                    <div className="text-sm text-muted-foreground">Objectifs atteints</div>                  </div>                  <Progress value={(stats.performance.completed / stats.performance.goals) * 100} className="h-3" />                </div>                                <div className="text-center">                  <div className="mb-4">                    <div className="text-3xl font-bold text-blue-600">{stats.performance.rating}</div>                    <div className="text-sm text-muted-foreground">Ã‰valuation actuelle</div>                  </div>                  <Badge variant="outline" className="bg-blue-50 dark:bg-blue-950">                    Performance excellente                  </Badge>                </div>                                <div className="text-center">                  <div className="mb-4">                    <div className="text-3xl font-bold text-purple-600">                      {new Date(stats.performance.nextReview).toLocaleDateString('fr-FR', { month: 'short', day: 'numeric' })}                    </div>                    <div className="text-sm text-muted-foreground">Prochaine Ã©valuation</div>                  </div>                  <MagneticButton variant="outline" size="sm">                    <Calendar className="h-4 w-4 mr-2" />                    Planifier                  </MagneticButton>                </div>              </div>            </CardContent>          </EnhancedCard>        </HoverZone>        {/* Actions Rapides Finales */}        <HoverZone effect="pulse">          <EnhancedCard variant="shimmer" className="bg-gradient-to-r from-blue-50 to-purple-50 dark:from-blue-950 dark:to-purple-950">            <CardHeader>              <TypewriterText                 text="âš¡ Actions Rapides EmployÃ©"                className="text-xl font-bold text-center"                speed={70}              />            </CardHeader>            <CardContent>              <StaggeredList className="grid grid-cols-2 md:grid-cols-4 gap-4">                <StaggeredItem>                  <MagneticButton className="w-full h-20 bg-gradient-to-br from-blue-400 to-blue-600 text-white text-center">                    <div>                      <FileText className="h-6 w-6 mx-auto mb-1" />                      <span className="text-sm font-medium">Rapports</span>                    </div>                  </MagneticButton>                </StaggeredItem>                <StaggeredItem>                  <MagneticButton className="w-full h-20 bg-gradient-to-br from-green-400 to-green-600 text-white text-center">                    <div>                      <Calendar className="h-6 w-6 mx-auto mb-1" />                      <span className="text-sm font-medium">CongÃ©s</span>                    </div>                  </MagneticButton>                </StaggeredItem>                <StaggeredItem>                  <MagneticButton className="w-full h-20 bg-gradient-to-br from-purple-400 to-purple-600 text-white text-center">                    <div>                      <Users className="h-6 w-6 mx-auto mb-1" />                      <span className="text-sm font-medium">Ã‰quipe</span>                    </div>                  </MagneticButton>                </StaggeredItem>                <StaggeredItem>                  <MagneticButton className="w-full h-20 bg-gradient-to-br from-orange-400 to-orange-600 text-white text-center">                    <div>                      <BarChart3 className="h-6 w-6 mx-auto mb-1" />                      <span className="text-sm font-medium">Analytics</span>                    </div>                  </MagneticButton>                </StaggeredItem>              </StaggeredList>            </CardContent>          </EnhancedCard>        </HoverZone>      </div>    </div>  );}